name: Terraform Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Job to setup AWS CLI and Terraform
  setup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ap-south-1    

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.6

  # Job to initialize Terraform
  terraform-init:
    needs: setup
    runs-on: ubuntu-latest
    
    steps:
      - name: Initialize Terraform
        run: terraform init

  # Job to plan Terraform
  terraform-plan:
    needs: terraform-init
    runs-on: ubuntu-latest
    
    steps:
      - name: Run Terraform Plan
        run: terraform plan -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

  # Job to destroy existing resources (if any)
  terraform-destroy:
    needs: terraform-plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Destroy existing resources
        run: |
          terraform destroy -auto-approve \
            -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

  # Job to apply Terraform changes
  terraform-apply:
    needs: terraform-destroy
    runs-on: ubuntu-latest
    
    steps:
      - name: Run Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

            